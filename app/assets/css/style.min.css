/*!
 * TrueSens
 * True Sens LP
 * 
 * @author Keizyu
 * @version 1.0.5
 * Copyright 2020. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{background-color:#fff;font:300 13px/1.6 gibsonregular,Helvetica,Arial;color:#4c4c4c;transition:all .4s ease-in .3s}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{background-color:#87d6af;height:73px;z-index:3;width:100%;position:fixed;top:0}.logo{padding:2rem 0 0 1rem;float:left}.logo img{width:142px}.nav{float:right}.nav ul{padding:2rem 1rem 0 0;margin:0}.nav a{text-decoration:none;color:#fff;font-family:gibsonregular;text-transform:uppercase;font-size:1.6rem;letter-spacing:1px}.nav ul{list-style:none}.container{width:100%;display:block;margin:0 auto;padding-left:5%;padding-right:5%}.row{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%}.row .column{-ms-flex-direction:column;flex-direction:column;-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex:1;flex:1}.light-grey-bkg{background-color:#e9e8e8}.light-grey-bkg .h2{color:#4c4c4c;line-height:1.2}.white-bkg{background-color:#fff}.section-bkg img{max-width:100%;width:100%;height:100%;margin-bottom:-1rem}.h2{text-transform:uppercase;font-weight:bolder;text-align:center;font-size:4rem;color:#87d6af;font-family:gibsonsemibold;letter-spacing:1px}.wrapper{max-width:688px;margin:0 auto;display:block}.main{margin-top:73px}.main .video-top .hoverEffect .column{padding:5%;padding-bottom:0}.main .video-bottom .hoverEffect .column{padding:5%}.main .video-bottom .hoverEffect .column:first-child{padding-right:0}.main .hero-banner{background-color:#87d6af;text-align:left;color:#fff;position:relative}@media screen and (min-width:767px){.main .hero-banner:after{content:"";width:100%;height:72px;background:url(../img/pleca.png) no-repeat 50%;background-color:transparent;position:absolute;bottom:-65px;z-index:2;background-position-y:bottom}}@media screen and (max-width:767px){.main .hero-banner{padding-bottom:2rem}}.main .hero-banner__wrapper{margin-top:-2px;padding:1rem 0}.main .hero-banner__wrapper h1{font-family:gibsonsemibold;text-transform:uppercase;font-size:4rem;line-height:1.1}@media screen and (max-width:767px){.main .hero-banner__wrapper h1{font-size:3rem}}@media screen and (max-width:520px){.main .hero-banner__wrapper h1{font-size:2rem}}.main .hero-banner__wrapper h6{font-family:gibsonlight;font-size:2rem;font-weight:lighter;margin:0;line-height:1.2}@media screen and (max-width:520px){.main .hero-banner__wrapper h6{font-size:1.4rem}}.main .main-section{position:relative;padding-bottom:8rem}@media screen and (max-width:520px){.main .main-section{padding-bottom:4rem}}.main .main-section img{max-width:100%;width:100%;height:100%}.main .main-section h2{text-transform:uppercase;font-family:gibsonlight;font-size:4rem;margin-bottom:2rem;text-align:center;line-height:1.3}@media screen and (max-width:767px){.main .main-section h2{font-size:3rem}}@media screen and (max-width:520px){.main .main-section h2{font-size:2rem}}.main .main-section .imgBanner{padding:2rem 0;text-align:center}.main .main-section .imgBanner img{max-width:480px}@media screen and (max-width:520px){.main .main-section .imgBanner img{max-width:240px}}.main .main-section p{margin:2rem 0;font-family:gibsonlight;font-size:28px}@media screen and (max-width:520px){.main .main-section p{font-size:1.4rem}}@media screen and (max-width:767px){.main .grey-banner{padding:5%!important;margin:0}.main .grey-banner h2{font-size:3rem;margin:0}}@media screen and (max-width:520px){.main .grey-banner{padding:3rem 2rem!important}.main .grey-banner h2{font-size:2rem}}.footer{background-color:#4c4c4c;color:#fff;font-size:2.4rem;text-align:center;padding:4rem 0}.footer h2{line-height:1.3}@media screen and (max-width:767px){.footer{font-size:1.2rem}}.footer ul.footer-social{padding:4rem 0;margin:0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.footer ul.footer-social li{display:inline-block;vertical-align:center}.footer ul.footer-social li img{max-height:55px}@media screen and (max-width:767px){.footer ul.footer-social li img{max-height:25px}}.button{min-width:150px;width:100%;display:block;padding:1rem 2rem;border:none;background:none;color:inherit;vertical-align:middle;position:relative;z-index:1;cursor:pointer;text-transform:uppercase;font-size:2rem;letter-spacing:1px;color:#fff;height:60px}@media screen and (max-width:520px){.button{font-size:1.2rem;padding:1rem;height:auto}}.button:focus{outline:none}.button>span{vertical-align:middle}.button--antiman{background:none}.button--antiman:after,.button--antiman:before{content:"";z-index:-1;border-radius:inherit;pointer-events:none;position:absolute;top:0;left:0;width:100%;height:100%;transition:transform .3s,opacity .3s}.button--antiman:before{border:3px solid #87d6af;opacity:0;transform:scale3d(1.2,1.2,1)}.button--antiman:after{background:#87d6af}.button--antiman:hover{color:#87d6af}.button--antiman:hover:before{opacity:1;transform:scaleX(1)}.button--antiman:hover:after{opacity:0;transform:scale3d(.8,.8,1)}@font-face{font-family:gibsonbold;src:url(../fonts/gibson-bold-webfont.eot);src:url(../fonts/gibson-bold-webfont.eot?#iefix) format("embedded-opentype"),url(../fonts/gibson-bold-webfont.woff2) format("woff2"),url(../fonts/gibson-bold-webfont.woff) format("woff"),url(../fonts/gibson-bold-webfont.ttf) format("truetype"),url(../fonts/gibson-bold-webfont.svg#gibsonbold) format("svg");font-weight:400;font-style:normal}@font-face{font-family:gibsonlight;src:url(../fonts/gibson-light-webfont.eot);src:url(../fonts/gibson-light-webfont.eot?#iefix) format("embedded-opentype"),url(../fonts/gibson-light-webfont.woff2) format("woff2"),url(../fonts/gibson-light-webfont.woff) format("woff"),url(../fonts/gibson-light-webfont.ttf) format("truetype"),url(../fonts/gibson-light-webfont.svg#gibsonlight) format("svg");font-weight:400;font-style:normal}@font-face{font-family:gibsonsemibold;src:url(../fonts/gibson-semibold-webfont.eot);src:url(../fonts/gibson-semibold-webfont.eot?#iefix) format("embedded-opentype"),url(../fonts/gibson-semibold-webfont.woff2) format("woff2"),url(../fonts/gibson-semibold-webfont.woff) format("woff"),url(../fonts/gibson-semibold-webfont.ttf) format("truetype"),url(../fonts/gibson-semibold-webfont.svg#gibsonsemibold) format("svg");font-weight:400;font-style:normal}@font-face{font-family:gibsonregular;src:url(../fonts/gibson-webfont.eot);src:url(../fonts/gibson-webfont.eot?#iefix) format("embedded-opentype"),url(../fonts/gibson-webfont.woff2) format("woff2"),url(../fonts/gibson-webfont.woff) format("woff"),url(../fonts/gibson-webfont.ttf) format("truetype"),url(../fonts/gibson-webfont.svg#gibsonregular) format("svg");font-weight:400;font-style:normal}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.menu{position:absolute;top:0;right:0;z-index:10;display:block;width:67px;height:67px;text-align:left;color:#fff;z-index:3}.menu__button{position:relative;z-index:10;display:block;overflow:hidden;width:100%;height:100%;cursor:pointer;transition:transform .6s cubic-bezier(.2,1,.3,1);-webkit-backface-visibility:hidden;backface-visibility:hidden}.menu__button:focus{outline:none}.menu__text{display:block;padding:2rem 1rem 0 0;font-weight:400;font-size:1.25em;opacity:1;transition:opacity .6s cubic-bezier(.2,1,.3,1)}.menu__open{position:absolute;top:0;right:0;overflow:hidden;width:220px;pointer-events:none}.menu__open-inner{position:relative;padding:2em 1.9em;opacity:0}.menu__open-inner .menu__list{padding:0;margin:0}.menu__open-inner .menu__list li{margin-top:3rem}.menu__open-inner .menu__list li a{font-size:1.6rem;line-height:1.2;font-family:gibsonsemibold;text-transform:uppercase}.menu__open:before{content:"";position:absolute;top:0;left:0;width:100%;height:100%;background-color:transparent;transform:translate3d(100%,-100%,0) translate3d(-67px,67px,0);transition:transform .6s cubic-bezier(.2,1,.3,1)}.menu__close{position:absolute;top:1.5em;right:1.5em;overflow:hidden;width:20px;height:20px;border:none;background:transparent url(../img/menu-close.png) no-repeat 50%;background-size:contain;color:transparent;text-indent:100%;opacity:0;transform:translate3d(50px,0,0);-webkit-backface-visibility:hidden;backface-visibility:hidden;cursor:pointer}.menu__close:focus{outline:none}.menu__social{padding:2rem 0;margin:0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.menu__social li{display:inline-block;vertical-align:center}.menu__social li img{max-height:20px}.menu--active .menu__button{cursor:default;transform:translate3d(490%,0,0)}.menu--active .menu__open{pointer-events:auto}.menu--active .menu__text{opacity:0;transition:opacity .1s ease}.menu--active .menu__open:before{transform:translateZ(0);transition-delay:0s;background-color:#4c4c4c}.menu--active .menu__open-inner{opacity:1;transition:opacity .6s cubic-bezier(.2,1,.3,1)}.menu--active .menu__close{opacity:1;transform:translateZ(0);transition:transform .6s cubic-bezier(.2,1,.3,1),opacity .6s cubic-bezier(.2,1,.3,1);transition-delay:15ms}.menu hr{border:2px solid #aaa;margin:3rem 2rem 1rem}#como-ayuda,#conoce-trusens,#hogar-saludable{scroll-margin-top:73px}.swiper-container .swiper-button-next,.swiper-container .swiper-button-prev{color:#fff;padding:0 1rem}.swiper-container .swiper-pagination{position:relative;margin:4rem 0 3rem}.swiper-container .swiper-pagination-bullet{width:10px;height:10px;border:2px solid #7c7c7c}.swiper-container .swiper-pagination-bullet-active{background-color:#87d6af}.hero-slider .swiper-container .swiper-pagination-bullet-active{background-color:#fff}.hero-slider .swiper-container .swiper-slide{text-align:center}.hero-slider .swiper-container .swiper-slide__content{position:absolute;z-index:1;top:auto;bottom:4rem;text-align:center;width:100%;max-width:740px;margin:0 auto;display:block;left:0;right:0}@media screen and (max-width:520px){.hero-slider .swiper-container .swiper-slide__content{bottom:2rem}}.hero-slider .swiper-container .swiper-slide__content h2{font-family:gibsonbold;color:#fff;font-size:5rem;text-transform:uppercase;text-shadow:0 0 40px #5e5e5e;line-height:1.2}@media screen and (max-width:767px){.hero-slider .swiper-container .swiper-slide__content h2{font-size:3rem;width:80%;margin:0 auto}}@media screen and (max-width:520px){.hero-slider .swiper-container .swiper-slide__content h2{font-size:2rem}}.hero-slider .swiper-container .swiper-slide img{width:100%}.product-slider .swiper-container{width:100%;margin-left:auto;margin-right:auto}.product-slider .gallery-top{height:auto;width:100%}@media screen and (min-width:767px){.product-slider .gallery-top{overflow:visible}}.product-slider .gallery-top .swiper-slide h2{font-family:gibsonbold}.product-slider .gallery-top .swiper-pagination{margin:0;position:absolute;bottom:-230px;z-index:99}.product-slider .gallery-thumbs{height:100%;padding:2rem 0}@media screen and (min-width:520px){.product-slider .gallery-thumbs{padding-bottom:60px;margin-top:4rem}}.product-slider .gallery-thumbs .swiper-slide{height:100%;opacity:.4;cursor:pointer;transition:opacity .2s ease-in-out}.product-slider .gallery-thumbs .swiper-slide-thumb-active,.product-slider .gallery-thumbs .swiper-slide:hover{opacity:1}.blockquote-slider .swiper-container{width:100%}.blockquote-slider .swiper-container .swiper-pagination{padding-top:6px}.blockquote-slider .swiper-slide{display:-ms-flexbox;display:flex;text-align:center;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;background-color:#4c4c4c;color:#fff;overflow:hidden}.blockquote-slider .swiper-slide__image{text-align:left;width:40%;background-size:cover;background-position:50%;overflow:hidden;margin-bottom:-6px;height:480px}@media screen and (max-width:520px){.blockquote-slider .swiper-slide__image{height:380px}}.blockquote-slider .swiper-slide__image img{width:100%;max-width:520px}.blockquote-slider .swiper-slide__content{text-align:center;width:60%;padding:0 2rem}@media (min-width:721px){.blockquote-slider .swiper-slide__content{padding:0 6rem}}.blockquote-slider .swiper-slide__content h2{text-align:justify;margin:0;font-size:3rem;line-height:1.3}@media (max-width:890px){.blockquote-slider .swiper-slide__content h2{font-size:2.4rem;text-align:left}}@media (max-width:720px){.blockquote-slider .swiper-slide__content h2{font-size:2rem}}@media (max-width:560px){.blockquote-slider .swiper-slide__content h2{font-size:1.6rem}}.blockquote-slider .swiper-slide__content--author{display:block;text-align:right;font-size:2rem;margin-top:2rem}@media screen and (max-width:520px){.blockquote-slider .swiper-slide__content--author{font-size:1.4rem}}.blockquote-slider .swiper-slide__content--stars{display:inline-block;margin:2rem auto 0}.blockquote-slider .swiper-slide__content--stars img{width:18px;margin:0 .4rem}@media screen and (max-width:520px){.blockquote-slider .swiper-slide__content--stars img{width:10px}}.hoverEffect{list-style:none}.hoverEffect,.hoverEffect figure{position:relative;text-align:center}.hoverEffect figure{overflow:hidden;margin:0;background:#000;cursor:pointer}.hoverEffect figure>img{position:relative;display:block;min-height:100%;max-width:100%;opacity:.8}.hoverEffect figure figcaption{padding:2em;color:#fff;text-transform:uppercase;font-size:1.25em;-webkit-backface-visibility:hidden;backface-visibility:hidden}.hoverEffect figure figcaption:after,.hoverEffect figure figcaption:before{pointer-events:none}.hoverEffect figure figcaption,.hoverEffect figure figcaption>a{position:absolute;top:0;left:0;width:100%;height:100%}.hoverEffect-heading{position:absolute;top:0;color:#fff;margin:0;left:2rem;text-align:left}.hoverEffect h3{font-size:3rem;line-height:1.2;margin:1rem 0}@media screen and (max-width:767px){.hoverEffect h3{font-size:1.8rem}}@media screen and (max-width:520px){.hoverEffect h3{font-size:1.4rem}}.effect-chico>img{transition:opacity .35s,transform .35s;transform:scale(1.12)}.effect-chico:hover>img{opacity:.3;transform:scale(1)}.effect-chico:hover .play,.effect-chico:hover figcaption:before{opacity:1;transform:scale(1)}.effect-chico figcaption:before{position:absolute;content:"";transform:scale(1.1);opacity:0;transition:opacity .35s,transform .35s}.effect-chico figcaption .play{opacity:0;display:block;width:100%;height:100%;background:transparent url(../img/play-button.png) no-repeat 50%;background-size:160px;transition:opacity .35s,transform .35s;transform:scale(1.5)}.padding-top-1{padding-top:1rem}.padding-top-2{padding-top:2rem}.padding-top-3{padding-top:3rem}.padding-top-4{padding-top:4rem}.padding-top-5{padding-top:5rem}.padding-top-6{padding-top:6rem}.padding-top-7{padding-top:7rem}.padding-top-8{padding-top:8rem}.padding-bottom-1{padding-bottom:1rem}.padding-bottom-2{padding-bottom:2rem}.padding-bottom-3{padding-bottom:3rem}.padding-bottom-4{padding-bottom:4rem}.padding-bottom-5{padding-bottom:5rem}.padding-bottom-6{padding-bottom:6rem}.padding-bottom-7{padding-bottom:7rem}.padding-bottom-8{padding-bottom:8rem}.margin-top-1{margin-top:1rem}.margin-top-2{margin-top:2rem}.margin-top-3{margin-top:3rem}.margin-top-4{margin-top:4rem}.margin-top-5{margin-top:5rem}.margin-top-6{margin-top:6rem}.margin-top-7{margin-top:7rem}.margin-top-8{margin-top:8rem}.margin-bottom-1{margin-bottom:1rem}.margin-bottom-2{margin-bottom:2rem}.margin-bottom-3{margin-bottom:3rem}.margin-bottom-4{margin-bottom:4rem}.margin-bottom-5{margin-bottom:5rem}.margin-bottom-6{margin-bottom:6rem}.margin-bottom-7{margin-bottom:7rem}.margin-bottom-8{margin-bottom:8rem}.margin-left-1{margin-left:1rem}.margin-left-2{margin-left:2rem}.margin-left-3{margin-left:3rem}.margin-left-4{margin-left:4rem}.margin-left-5{margin-left:5rem}.margin-left-6{margin-left:6rem}.margin-left-7{margin-left:7rem}.margin-left-8{margin-left:8rem}.margin-right-1{margin-right:1rem}.margin-right-2{margin-right:2rem}.margin-right-3{margin-right:3rem}.margin-right-4{margin-right:4rem}.margin-right-5{margin-right:5rem}.margin-right-6{margin-right:6rem}.margin-right-7{margin-right:7rem}.margin-right-8{margin-right:8rem}.padding-1{padding:1rem}.padding-2{padding:2rem}.padding-3{padding:3rem}.padding-4{padding:4rem}.margin-1{margin:1rem}.margin-2{margin:2rem}.margin-3{margin:3rem}.margin-4{margin:4rem}@media only screen and (max-width:520px){.hide-on-small-and-down,.hide-on-small-only{display:none!important}}@media only screen and (max-width:992px){.hide-on-med-and-down{display:none!important}}@media only screen and (min-width:521px){.hide-on-med-and-up{display:none!important}}@media only screen and (min-width:520px) and (max-width:992px){.hide-on-med-only{display:none!important}}@media only screen and (min-width:993px){.hide-on-large-only{display:none!important}}@media only screen and (min-width:1201px){.hide-on-extra-large-only{display:none!important}}@media only screen and (min-width:1201px){.show-on-extra-large{display:block!important}}@media only screen and (min-width:993px){.show-on-large{display:block!important}}@media only screen and (min-width:520px) and (max-width:992px){.show-on-medium{display:block!important}}@media only screen and (max-width:520px){.show-on-small{display:block!important}}@media only screen and (min-width:521px){.show-on-medium-and-up{display:block!important}}@media only screen and (max-width:992px){.show-on-medium-and-down{display:block!important}}@media only screen and (max-width:520px){.center-on-small-only{text-align:center}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX2NsZWFyZml4LnNjc3MiLCJzdHlsZS5jc3MiLCJtb2R1bGVzL19kZWZhdWx0cy5zY3NzIiwibW9kdWxlcy9fdmFycy5zY3NzIiwibW9kdWxlcy9fbm9ybWFsaXplLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJwYXJ0aWFscy9fbmF2LnNjc3MiLCJwYXJ0aWFscy9fbWFpbi5zY3NzIiwibWl4aW5zL19icmVha3BvaW50cy5zY3NzIiwicGFydGlhbHMvX2Zvb3Rlci5zY3NzIiwibW9kdWxlcy9fYnV0dG9ucy5zY3NzIiwibW9kdWxlcy9fdHlwb2dyYXBoeS5zY3NzIiwibW9kdWxlcy9fbWlzYy5zY3NzIiwibW9kdWxlcy9fbWVudS5zY3NzIiwibW9kdWxlcy9fc2xpZGVyLnNjc3MiLCJtb2R1bGVzL19ob3Zlci5zY3NzIiwibW9kdWxlcy9faGVscGVycy5zY3NzIiwibW9kdWxlcy9fYnJlYWtwb2ludHMuc2NzcyIsIm1vZHVsZXMvX3ByaW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSwyQkFDRSxZQUFZLEFBQ1osYUFBYyxDQUNmLEFBQ0QsUUNDRSxNREFRLENBRFYsQUFTQyxhQUZHLFVBQVcsQ0FDWixBRVpILEVBQ0Usc0JBQXNCLEFBQ3RCLDJCQUEyQixBQUMzQixpQ0FBa0MsQ0FDbkMsQUFDRCxLQUNFLGVBQWdCLENBQ2pCLEFBQ0QsS0FDSSxzQkFDQSxBQ05RLGdERE00QyxBQUNwRCxjQUNBLEFDSFUsOEJER3FCLENBQ2xDOztBRWJELDRFRktBLEFFTDRFLEtBUTFFLHVCQUF1QixBQUN2QiwwQkFBMEIsQUFDMUIsNkJBQThCLENGRmhDLEFFR0MsS0FPQyxRQUFTLENBQ1YsQUFXRCxvRkFZRSxhQUFjLENBQ2YsQUFNRCw0QkFJRSxvQkFBcUIsQ0FDdEIsQUFNRCxzQkFDRSxhQUFhLEFBQ2IsUUFBUyxDQUNWLEFBTUQsU0FDRSx1QkFBd0IsQ0FDekIsQUFPRCxrQkFFRSxZQUFhLENBQ2QsQUFV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QXlCLENBQzFCLENBQUEsQUFHSCx5Q0FDRSxlQUNFLHVCQUF5QixDQUMxQixDQUFBLEFBR0gsK0RBQ0UsZ0JBQ0UsdUJBQXlCLENBQzFCLENBQUEsQUFHSCx5Q0FDRSxlQUNFLHVCQUF5QixDQUMxQixDQUFBLEFBR0gseUNBQ0UsdUJBQ0UsdUJBQXlCLENBQzFCLENBQUEsQUFHSCx5Q0FDRSx5QkFDRSx1QkFBeUIsQ0FDMUIsQ0FBQSxBQUdILHlDQUNFLHNCQUNFLGlCQUFrQixDQUNuQixDQUFBLEFDOUVILGFoQkFBLEVnQkVJLGlDQUFrQyxBQUNsQyxxQkFBc0IsQUFDdEIsMEJBQTJCLEFBQzNCLDBCQUE0QixDQUM3QixBQUNELFlBRUUseUJBQTBCLENBQzNCLEFBQ0QsY0FDRSwyQkFBNEIsQ0FDN0IsQUFDRCxrQkFDRSw0QkFBNkIsQ0FDOUIsQUFDRCw0REFHRSxVQUFXLENBQ1osQUFDRCxlQUVFLHNCQUFzQixBQUN0Qix1QkFBd0IsQ0FDekIsQUFDRCxNQUNFLDBCQUEyQixDQUM1QixBQUNELE9BRUUsdUJBQXdCLENkeUs1QixBY3hLRyxJQUVDLHdCQUEwQixDQUMzQixBQUNELE1BQ0UsV0FBYSxDQUFBLEFBRWYsUUFHRSxVQUFVLEFBQ1YsUUFBUyxDQUNWLEFBQ0QsTUFFRSxzQkFBdUIsQ0FDeEIsQ0FBQSIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJWNsZWFyIHtcbiAgY29udGVudDogJyAnO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbi5jbGVhciB7XG4gICp6b29tOiAxO1xuICAmOmJlZm9yZSB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gIH1cbiAgJjphZnRlciB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cbiIsIi5jbGVhcjpiZWZvcmUsIC5jbGVhcjphZnRlciB7XG4gIGNvbnRlbnQ6ICcgJztcbiAgZGlzcGxheTogdGFibGU7IH1cblxuLmNsZWFyIHtcbiAgKnpvb206IDE7IH1cbiAgLmNsZWFyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlOyB9XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xuICBmb250OiAzMDAgMTNweC8xLjYgJ2dpYnNvbnJlZ3VsYXInLCBIZWx2ZXRpY2EsIEFyaWFsO1xuICBjb2xvcjogIzRjNGM0YztcbiAgdHJhbnNpdGlvbjogYWxsIC40cyAuM3MgZWFzZS1pbjsgfVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLmhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4N0Q2QUY7XG4gIGhlaWdodDogNzNweDtcbiAgei1pbmRleDogMztcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwOyB9XG5cbi5sb2dvIHtcbiAgcGFkZGluZzogMnJlbSAwIDAgMXJlbTtcbiAgZmxvYXQ6IGxlZnQ7IH1cbiAgLmxvZ28gaW1nIHtcbiAgICB3aWR0aDogMTQycHg7IH1cblxuLm5hdiB7XG4gIGZsb2F0OiByaWdodDsgfVxuICAubmF2IHVsIHtcbiAgICBwYWRkaW5nOiAycmVtIDFyZW0gMCAwO1xuICAgIG1hcmdpbjogMDsgfVxuICAubmF2IGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogI0ZGRjtcbiAgICBmb250LWZhbWlseTogJ2dpYnNvbnJlZ3VsYXInO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDsgfVxuXG4ubmF2IHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1sZWZ0OiA1JTtcbiAgcGFkZGluZy1yaWdodDogNSU7IH1cblxuLnJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLnJvdyAuY29sdW1uIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleDogMTsgfVxuXG4ubGlnaHQtZ3JleS1ia2cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTllOGU4OyB9XG4gIC5saWdodC1ncmV5LWJrZyAuaDIge1xuICAgIGNvbG9yOiAjNGM0YzRjO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cblxuLndoaXRlLWJrZyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cblxuLnNlY3Rpb24tYmtnIGltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogLTFyZW07IH1cblxuLmgyIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDRyZW07XG4gIGNvbG9yOiAjODdENkFGO1xuICBmb250LWZhbWlseTogJ2dpYnNvbnNlbWlib2xkJztcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDsgfVxuXG4ud3JhcHBlciB7XG4gIG1heC13aWR0aDogNjg4cHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4ubWFpbiB7XG4gIG1hcmdpbi10b3A6IDczcHg7IH1cbiAgLm1haW4gLnZpZGVvLXRvcCAuaG92ZXJFZmZlY3QgLmNvbHVtbiB7XG4gICAgcGFkZGluZzogNSU7XG4gICAgcGFkZGluZy1ib3R0b206IDA7IH1cbiAgLm1haW4gLnZpZGVvLWJvdHRvbSAuaG92ZXJFZmZlY3QgLmNvbHVtbiB7XG4gICAgcGFkZGluZzogNSU7IH1cbiAgICAubWFpbiAudmlkZW8tYm90dG9tIC5ob3ZlckVmZmVjdCAuY29sdW1uOm50aC1jaGlsZCgxKSB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gIC5tYWluIC5oZXJvLWJhbm5lciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzg3RDZBRjtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGNvbG9yOiAjRkZGO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAubWFpbiAuaGVyby1iYW5uZXI6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDcycHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9wbGVjYS5wbmdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogLTY1cHg7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb24teTogYm90dG9tOyB9IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLm1haW4gLmhlcm8tYmFubmVyIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDJyZW07IH0gfVxuICAgIC5tYWluIC5oZXJvLWJhbm5lcl9fd3JhcHBlciB7XG4gICAgICBtYXJnaW4tdG9wOiAtMnB4O1xuICAgICAgcGFkZGluZzogMXJlbSAwOyB9XG4gICAgICAubWFpbiAuaGVyby1iYW5uZXJfX3dyYXBwZXIgaDEge1xuICAgICAgICBmb250LWZhbWlseTogJ2dpYnNvbnNlbWlib2xkJztcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgZm9udC1zaXplOiA0cmVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4xOyB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAgICAgLm1haW4gLmhlcm8tYmFubmVyX193cmFwcGVyIGgxIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTsgfSB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gICAgICAgICAgLm1haW4gLmhlcm8tYmFubmVyX193cmFwcGVyIGgxIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTsgfSB9XG4gICAgICAubWFpbiAuaGVyby1iYW5uZXJfX3dyYXBwZXIgaDYge1xuICAgICAgICBmb250LWZhbWlseTogJ2dpYnNvbmxpZ2h0JztcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yOyB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gICAgICAgICAgLm1haW4gLmhlcm8tYmFubmVyX193cmFwcGVyIGg2IHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40cmVtOyB9IH1cbiAgLm1haW4gLm1haW4tc2VjdGlvbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmctYm90dG9tOiA4cmVtOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICAgIC5tYWluIC5tYWluLXNlY3Rpb24ge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNHJlbTsgfSB9XG4gICAgLm1haW4gLm1haW4tc2VjdGlvbiBpbWcge1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAubWFpbiAubWFpbi1zZWN0aW9uIGgyIHtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LWZhbWlseTogZ2lic29ubGlnaHQ7XG4gICAgICBmb250LXNpemU6IDRyZW07XG4gICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMzsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLm1haW4gLm1haW4tc2VjdGlvbiBoMiB7XG4gICAgICAgICAgZm9udC1zaXplOiAzcmVtOyB9IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gICAgICAgIC5tYWluIC5tYWluLXNlY3Rpb24gaDIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTsgfSB9XG4gICAgLm1haW4gLm1haW4tc2VjdGlvbiAuaW1nQmFubmVyIHtcbiAgICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLm1haW4gLm1haW4tc2VjdGlvbiAuaW1nQmFubmVyIGltZyB7XG4gICAgICAgIG1heC13aWR0aDogNDgwcHg7IH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICAgICAgICAubWFpbiAubWFpbi1zZWN0aW9uIC5pbWdCYW5uZXIgaW1nIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogMjQwcHg7IH0gfVxuICAgIC5tYWluIC5tYWluLXNlY3Rpb24gcCB7XG4gICAgICBtYXJnaW46IDJyZW0gMDtcbiAgICAgIGZvbnQtZmFtaWx5OiAnZ2lic29ubGlnaHQnO1xuICAgICAgZm9udC1zaXplOiAyOHB4OyB9XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgICAgICAubWFpbiAubWFpbi1zZWN0aW9uIHAge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS40cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAubWFpbiAuZ3JleS1iYW5uZXIge1xuICAgICAgcGFkZGluZzogNSUgIWltcG9ydGFudDtcbiAgICAgIG1hcmdpbjogMDsgfVxuICAgICAgLm1haW4gLmdyZXktYmFubmVyIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAzcmVtO1xuICAgICAgICBtYXJnaW46IDA7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgIC5tYWluIC5ncmV5LWJhbm5lciB7XG4gICAgICBwYWRkaW5nOiAzcmVtIDJyZW0gIWltcG9ydGFudDsgfVxuICAgICAgLm1haW4gLmdyZXktYmFubmVyIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAycmVtOyB9IH1cblxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0YzRjNGM7XG4gIGNvbG9yOiAjRkZGO1xuICBmb250LXNpemU6IDIuNHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiA0cmVtIDA7IH1cbiAgLmZvb3RlciBoMiB7XG4gICAgbGluZS1oZWlnaHQ6IDEuMzsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5mb290ZXIge1xuICAgICAgZm9udC1zaXplOiAxLjJyZW07IH0gfVxuICAuZm9vdGVyIHVsLmZvb3Rlci1zb2NpYWwge1xuICAgIHBhZGRpbmc6IDRyZW0gMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAuZm9vdGVyIHVsLmZvb3Rlci1zb2NpYWwgbGkge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLmZvb3RlciB1bC5mb290ZXItc29jaWFsIGxpIGltZyB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDU1cHg7IH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgICAuZm9vdGVyIHVsLmZvb3Rlci1zb2NpYWwgbGkgaW1nIHtcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDI1cHg7IH0gfVxuXG4uYnV0dG9uIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDJyZW07XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIGNvbG9yOiAjRkZGO1xuICBoZWlnaHQ6IDYwcHg7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICAuYnV0dG9uIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgIGhlaWdodDogYXV0bzsgfSB9XG4gIC5idXR0b246Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgLmJ1dHRvbiA+IHNwYW4ge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgLmJ1dHRvbi0tYW50aW1hbiB7XG4gICAgYmFja2dyb3VuZDogbm9uZTsgfVxuICAgIC5idXR0b24tLWFudGltYW46OmJlZm9yZSwgLmJ1dHRvbi0tYW50aW1hbjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCBvcGFjaXR5IDAuM3M7IH1cbiAgICAuYnV0dG9uLS1hbnRpbWFuOjpiZWZvcmUge1xuICAgICAgYm9yZGVyOiAzcHggc29saWQgIzg3RDZBRjtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMS4yLCAxLjIsIDEpOyB9XG4gICAgLmJ1dHRvbi0tYW50aW1hbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogIzg3RDZBRjsgfVxuICAgIC5idXR0b24tLWFudGltYW46aG92ZXIge1xuICAgICAgY29sb3I6ICM4N0Q2QUY7IH1cbiAgICAgIC5idXR0b24tLWFudGltYW46aG92ZXI6OmJlZm9yZSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUzZCgxLCAxLCAxKTsgfVxuICAgICAgLmJ1dHRvbi0tYW50aW1hbjpob3Zlcjo6YWZ0ZXIge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC44LCAwLjgsIDEpOyB9XG5cbi8qIEFudGltYW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2dpYnNvbmJvbGQtaXRhbGljJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9naWJzb24tYm9sZC1pdGFsaWMtd2ViZm9udC5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZ2lic29uLWJvbGQtaXRhbGljLXdlYmZvbnQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZ2lic29uLWJvbGQtaXRhbGljLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1ib2xkLWl0YWxpYy13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvZ2lic29uLWJvbGQtaXRhbGljLXdlYmZvbnQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tYm9sZC1pdGFsaWMtd2ViZm9udC5zdmcjZ2lic29uYm9sZF9pdGFsaWNcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnZ2lic29uYm9sZCc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZ2lic29uLWJvbGQtd2ViZm9udC5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZ2lic29uLWJvbGQtd2ViZm9udC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tYm9sZC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tYm9sZC13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvZ2lic29uLWJvbGQtd2ViZm9udC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1ib2xkLXdlYmZvbnQuc3ZnI2dpYnNvbmJvbGRcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnZ2lic29uaXRhbGljJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9naWJzb24taXRhbGljLXdlYmZvbnQuZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2dpYnNvbi1pdGFsaWMtd2ViZm9udC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24taXRhbGljLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1pdGFsaWMtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1pdGFsaWMtd2ViZm9udC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1pdGFsaWMtd2ViZm9udC5zdmcjZ2lic29uaXRhbGljXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2dpYnNvbmxpZ2h0LWl0YWxpYyc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZ2lic29uLWxpZ2h0LWl0YWxpYy13ZWJmb250LmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9naWJzb24tbGlnaHQtaXRhbGljLXdlYmZvbnQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZ2lic29uLWxpZ2h0LWl0YWxpYy13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tbGlnaHQtaXRhbGljLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tbGlnaHQtaXRhbGljLXdlYmZvbnQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tbGlnaHQtaXRhbGljLXdlYmZvbnQuc3ZnI2dpYnNvbmxpZ2h0X2l0YWxpY1wiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdnaWJzb25saWdodCc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZ2lic29uLWxpZ2h0LXdlYmZvbnQuZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2dpYnNvbi1saWdodC13ZWJmb250LmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1saWdodC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tbGlnaHQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1saWdodC13ZWJmb250LnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZ2lic29uLWxpZ2h0LXdlYmZvbnQuc3ZnI2dpYnNvbmxpZ2h0XCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2dpYnNvbnNlbWlib2xkLWl0YWxpYyc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZ2lic29uLXNlbWlib2xkLWl0YWxpYy13ZWJmb250LmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9naWJzb24tc2VtaWJvbGQtaXRhbGljLXdlYmZvbnQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZ2lic29uLXNlbWlib2xkLWl0YWxpYy13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tc2VtaWJvbGQtaXRhbGljLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tc2VtaWJvbGQtaXRhbGljLXdlYmZvbnQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tc2VtaWJvbGQtaXRhbGljLXdlYmZvbnQuc3ZnI2dpYnNvbnNlbWlib2xkX2l0YWxpY1wiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdnaWJzb25zZW1pYm9sZCc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZ2lic29uLXNlbWlib2xkLXdlYmZvbnQuZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2dpYnNvbi1zZW1pYm9sZC13ZWJmb250LmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1zZW1pYm9sZC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24tc2VtaWJvbGQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi1zZW1pYm9sZC13ZWJmb250LnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZ2lic29uLXNlbWlib2xkLXdlYmZvbnQuc3ZnI2dpYnNvbnNlbWlib2xkXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2dpYnNvbnJlZ3VsYXInO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2dpYnNvbi13ZWJmb250LmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9naWJzb24td2ViZm9udC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24td2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvZ2lic29uLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9naWJzb24td2ViZm9udC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2dpYnNvbi13ZWJmb250LnN2ZyNnaWJzb25yZWd1bGFyXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuOjotd2Via2l0LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG4ubWVudSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMTA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNjdweDtcbiAgaGVpZ2h0OiA2N3B4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBjb2xvcjogd2hpdGU7XG4gIHotaW5kZXg6IDM7IH1cbiAgLm1lbnVfX2J1dHRvbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC42cyBjdWJpYy1iZXppZXIoMC4yLCAxLCAwLjMsIDEpO1xuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICAgIC5tZW51X19idXR0b246Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTsgfVxuICAubWVudV9fdGV4dCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMnJlbSAxcmVtIDAgMDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjZzIGN1YmljLWJlemllcigwLjIsIDEsIDAuMywgMSk7IH1cbiAgLm1lbnVfX29wZW4ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB3aWR0aDogMjIwcHg7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgICAubWVudV9fb3Blbi1pbm5lciB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiAyZW0gMS45ZW07XG4gICAgICBvcGFjaXR5OiAwOyB9XG4gICAgICAubWVudV9fb3Blbi1pbm5lciAubWVudV9fbGlzdCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIG1hcmdpbjogMDsgfVxuICAgICAgICAubWVudV9fb3Blbi1pbm5lciAubWVudV9fbGlzdCBsaSB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogM3JlbTsgfVxuICAgICAgICAgIC5tZW51X19vcGVuLWlubmVyIC5tZW51X19saXN0IGxpIGEge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdnaWJzb25zZW1pYm9sZCc7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgLm1lbnVfX29wZW46OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAtMTAwJSwgMCkgdHJhbnNsYXRlM2QoLTY3cHgsIDY3cHgsIDApO1xuICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNnMgY3ViaWMtYmV6aWVyKDAuMiwgMSwgMC4zLCAxKTsgfVxuICAubWVudV9fY2xvc2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDEuNWVtO1xuICAgIHJpZ2h0OiAxLjVlbTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKC4uL2ltZy9tZW51LWNsb3NlLnBuZykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB0ZXh0LWluZGVudDogMTAwJTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoNTBweCwgMCwgMCk7XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5tZW51X19jbG9zZTpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiBub25lOyB9XG4gIC5tZW51X19zb2NpYWwge1xuICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAubWVudV9fc29jaWFsIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7IH1cbiAgICAgIC5tZW51X19zb2NpYWwgbGkgaW1nIHtcbiAgICAgICAgbWF4LWhlaWdodDogMjBweDsgfVxuICAubWVudS0tYWN0aXZlIC5tZW51X19idXR0b24ge1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDQ5MCUsIDAsIDApOyB9XG4gIC5tZW51LS1hY3RpdmUgLm1lbnVfX29wZW4ge1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvOyB9XG4gIC5tZW51LS1hY3RpdmUgLm1lbnVfX3RleHQge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjFzIGVhc2U7IH1cbiAgLm1lbnUtLWFjdGl2ZSAubWVudV9fb3Blbjo6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIHRyYW5zaXRpb24tZGVsYXk6IDBzO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0YzRjNGM7IH1cbiAgLm1lbnUtLWFjdGl2ZSAubWVudV9fb3Blbi1pbm5lciB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNnMgY3ViaWMtYmV6aWVyKDAuMiwgMSwgMC4zLCAxKTsgfVxuICAubWVudS0tYWN0aXZlIC5tZW51X19jbG9zZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjZzIGN1YmljLWJlemllcigwLjIsIDEsIDAuMywgMSksIG9wYWNpdHkgMC42cyBjdWJpYy1iZXppZXIoMC4yLCAxLCAwLjMsIDEpO1xuICAgIHRyYW5zaXRpb24tZGVsYXk6IDAuMDE1czsgfVxuICAubWVudSBociB7XG4gICAgYm9yZGVyOiAycHggc29saWQgI2FhYWFhYTtcbiAgICBtYXJnaW46IDNyZW0gMnJlbSAxcmVtOyB9XG5cbiNjb21vLWF5dWRhLCAjY29ub2NlLXRydXNlbnMsICNob2dhci1zYWx1ZGFibGUge1xuICBzY3JvbGwtbWFyZ2luLXRvcDogNzNweDsgfVxuXG4uc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLWJ1dHRvbi1uZXh0LCAuc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgY29sb3I6ICNGRkY7XG4gIHBhZGRpbmc6IDAgMXJlbSAwIDFyZW07IH1cblxuLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1wYWdpbmF0aW9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDRyZW0gMCAzcmVtOyB9XG4gIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICAgIHdpZHRoOiAxMHB4O1xuICAgIGhlaWdodDogMTBweDtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjN2M3YzdjOyB9XG4gIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODdENkFGOyB9XG5cbi5oZXJvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7IH1cblxuLmhlcm8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItc2xpZGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmhlcm8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItc2xpZGVfX2NvbnRlbnQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIHRvcDogYXV0bztcbiAgICBib3R0b206IDRyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogNzQwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gICAgICAuaGVyby1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1zbGlkZV9fY29udGVudCB7XG4gICAgICAgIGJvdHRvbTogMnJlbTsgfSB9XG4gICAgLmhlcm8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItc2xpZGVfX2NvbnRlbnQgaDIge1xuICAgICAgZm9udC1mYW1pbHk6ICdnaWJzb25ib2xkJztcbiAgICAgIGNvbG9yOiAjRkZGO1xuICAgICAgZm9udC1zaXplOiA1cmVtO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIHRleHQtc2hhZG93OiAwIDAgNDBweCAjNUU1RTVFO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmhlcm8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItc2xpZGVfX2NvbnRlbnQgaDIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICAgIG1hcmdpbjogMCBhdXRvOyB9IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gICAgICAgIC5oZXJvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLXNsaWRlX19jb250ZW50IGgyIHtcbiAgICAgICAgICBmb250LXNpemU6IDJyZW07IH0gfVxuICAuaGVyby1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1zbGlkZSBpbWcge1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5wcm9kdWN0LXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG5cbi5wcm9kdWN0LXNsaWRlciAuZ2FsbGVyeS10b3Age1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgLnByb2R1Y3Qtc2xpZGVyIC5nYWxsZXJ5LXRvcCB7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTsgfSB9XG4gIC5wcm9kdWN0LXNsaWRlciAuZ2FsbGVyeS10b3AgLnN3aXBlci1zbGlkZSBoMiB7XG4gICAgZm9udC1mYW1pbHk6ICdnaWJzb25ib2xkJzsgfVxuICAucHJvZHVjdC1zbGlkZXIgLmdhbGxlcnktdG9wIC5zd2lwZXItcGFnaW5hdGlvbiB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IC0yMzBweDtcbiAgICB6LWluZGV4OiA5OTsgfVxuXG4ucHJvZHVjdC1zbGlkZXIgLmdhbGxlcnktdGh1bWJzIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAycmVtIDA7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTIwcHgpIHtcbiAgICAucHJvZHVjdC1zbGlkZXIgLmdhbGxlcnktdGh1bWJzIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA2MHB4O1xuICAgICAgbWFyZ2luLXRvcDogNHJlbTsgfSB9XG5cbi5wcm9kdWN0LXNsaWRlciAuZ2FsbGVyeS10aHVtYnMgLnN3aXBlci1zbGlkZSB7XG4gIGhlaWdodDogMTAwJTtcbiAgb3BhY2l0eTogMC40O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjJzIGVhc2UtaW4tb3V0OyB9XG4gIC5wcm9kdWN0LXNsaWRlciAuZ2FsbGVyeS10aHVtYnMgLnN3aXBlci1zbGlkZTpob3ZlciB7XG4gICAgb3BhY2l0eTogMTsgfVxuXG4ucHJvZHVjdC1zbGlkZXIgLmdhbGxlcnktdGh1bWJzIC5zd2lwZXItc2xpZGUtdGh1bWItYWN0aXZlIHtcbiAgb3BhY2l0eTogMTsgfVxuXG4uYmxvY2txdW90ZS1zbGlkZXIgLnN3aXBlci1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTsgfVxuICAuYmxvY2txdW90ZS1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1wYWdpbmF0aW9uIHtcbiAgICBwYWRkaW5nLXRvcDogNnB4OyB9XG5cbi5ibG9ja3F1b3RlLXNsaWRlciAuc3dpcGVyLXNsaWRlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRjNGM0YztcbiAgY29sb3I6ICNGRkY7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLmJsb2NrcXVvdGUtc2xpZGVyIC5zd2lwZXItc2xpZGVfX2ltYWdlIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHdpZHRoOiA0MCU7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtYXJnaW4tYm90dG9tOiAtNnB4O1xuICAgIGhlaWdodDogNDgwcHg7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgICAgLmJsb2NrcXVvdGUtc2xpZGVyIC5zd2lwZXItc2xpZGVfX2ltYWdlIHtcbiAgICAgICAgaGVpZ2h0OiAzODBweDsgfSB9XG4gICAgLmJsb2NrcXVvdGUtc2xpZGVyIC5zd2lwZXItc2xpZGVfX2ltYWdlIGltZyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1heC13aWR0aDogNTIwcHg7IH1cbiAgLmJsb2NrcXVvdGUtc2xpZGVyIC5zd2lwZXItc2xpZGVfX2NvbnRlbnQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogNjAlO1xuICAgIHBhZGRpbmc6IDAgMnJlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3MjFweCkge1xuICAgICAgLmJsb2NrcXVvdGUtc2xpZGVyIC5zd2lwZXItc2xpZGVfX2NvbnRlbnQge1xuICAgICAgICBwYWRkaW5nOiAwIDZyZW07IH0gfVxuICAgIC5ibG9ja3F1b3RlLXNsaWRlciAuc3dpcGVyLXNsaWRlX19jb250ZW50IGgyIHtcbiAgICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICBsaW5lLWhlaWdodDogMS4zOyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogODkwcHgpIHtcbiAgICAgICAgLmJsb2NrcXVvdGUtc2xpZGVyIC5zd2lwZXItc2xpZGVfX2NvbnRlbnQgaDIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDcyMHB4KSB7XG4gICAgICAgIC5ibG9ja3F1b3RlLXNsaWRlciAuc3dpcGVyLXNsaWRlX19jb250ZW50IGgyIHtcbiAgICAgICAgICBmb250LXNpemU6IDJyZW07IH0gfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDU2MHB4KSB7XG4gICAgICAgIC5ibG9ja3F1b3RlLXNsaWRlciAuc3dpcGVyLXNsaWRlX19jb250ZW50IGgyIHtcbiAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTsgfSB9XG4gICAgLmJsb2NrcXVvdGUtc2xpZGVyIC5zd2lwZXItc2xpZGVfX2NvbnRlbnQtLWF1dGhvciB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgbWFyZ2luLXRvcDogMnJlbTsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICAgICAgLmJsb2NrcXVvdGUtc2xpZGVyIC5zd2lwZXItc2xpZGVfX2NvbnRlbnQtLWF1dGhvciB7XG4gICAgICAgICAgZm9udC1zaXplOiAxLjRyZW07IH0gfVxuICAgIC5ibG9ja3F1b3RlLXNsaWRlciAuc3dpcGVyLXNsaWRlX19jb250ZW50LS1zdGFycyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46IDJyZW0gYXV0byAwOyB9XG4gICAgICAuYmxvY2txdW90ZS1zbGlkZXIgLnN3aXBlci1zbGlkZV9fY29udGVudC0tc3RhcnMgaW1nIHtcbiAgICAgICAgd2lkdGg6IDE4cHg7XG4gICAgICAgIG1hcmdpbjogMCAuNHJlbTsgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgICAgICAgIC5ibG9ja3F1b3RlLXNsaWRlciAuc3dpcGVyLXNsaWRlX19jb250ZW50LS1zdGFycyBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwcHg7IH0gfVxuXG4vKi0tLS0tLS0tLS0tLS0tLSovXG4vKioqKiogaG92ZXJFZmZlY3QgKioqKiovXG4vKi0tLS0tLS0tLS0tLS0tLSovXG4uaG92ZXJFZmZlY3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuaG92ZXJFZmZlY3QgZmlndXJlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtYXJnaW46IDA7XG4gICAgYmFja2dyb3VuZDogIzAwMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgLmhvdmVyRWZmZWN0IGZpZ3VyZSA+IGltZyB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICBvcGFjaXR5OiAwLjg7IH1cbiAgICAuaG92ZXJFZmZlY3QgZmlndXJlIGZpZ2NhcHRpb24ge1xuICAgICAgcGFkZGluZzogMmVtO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC1zaXplOiAxLjI1ZW07XG4gICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgICAgIC5ob3ZlckVmZmVjdCBmaWd1cmUgZmlnY2FwdGlvbjo6YmVmb3JlLCAuaG92ZXJFZmZlY3QgZmlndXJlIGZpZ2NhcHRpb246OmFmdGVyIHtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgICAuaG92ZXJFZmZlY3QgZmlndXJlIGZpZ2NhcHRpb24sXG4gICAgLmhvdmVyRWZmZWN0IGZpZ3VyZSBmaWdjYXB0aW9uID4gYSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgLmhvdmVyRWZmZWN0LWhlYWRpbmcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgY29sb3I6ICNGRkY7XG4gICAgbWFyZ2luOiAwO1xuICAgIGxlZnQ6IDJyZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAuaG92ZXJFZmZlY3QgaDMge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIG1hcmdpbjogMXJlbSAwOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgIC5ob3ZlckVmZmVjdCBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS44cmVtOyB9IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgICAgLmhvdmVyRWZmZWN0IGgzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjRyZW07IH0gfVxuXG4uZWZmZWN0LWNoaWNvID4gaW1nIHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjM1cywgdHJhbnNmb3JtIDAuMzVzO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMTIpOyB9XG5cbi5lZmZlY3QtY2hpY286aG92ZXIgPiBpbWcge1xuICBvcGFjaXR5OiAwLjM7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7IH1cblxuLmVmZmVjdC1jaGljbzpob3ZlciBmaWdjYXB0aW9uOjpiZWZvcmUsXG4uZWZmZWN0LWNoaWNvOmhvdmVyIC5wbGF5IHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfVxuXG4uZWZmZWN0LWNoaWNvIGZpZ2NhcHRpb246OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJyc7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjM1cywgdHJhbnNmb3JtIDAuMzVzOyB9XG5cbi5lZmZlY3QtY2hpY28gZmlnY2FwdGlvbiAucGxheSB7XG4gIG9wYWNpdHk6IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoLi4vaW1nL3BsYXktYnV0dG9uLnBuZykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogMTYwcHg7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zNXMsIHRyYW5zZm9ybSAwLjM1cztcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjUpOyB9XG5cbi5wYWRkaW5nLXRvcC0xIHtcbiAgcGFkZGluZy10b3A6IDFyZW07IH1cblxuLnBhZGRpbmctdG9wLTIge1xuICBwYWRkaW5nLXRvcDogMnJlbTsgfVxuXG4ucGFkZGluZy10b3AtMyB7XG4gIHBhZGRpbmctdG9wOiAzcmVtOyB9XG5cbi5wYWRkaW5nLXRvcC00IHtcbiAgcGFkZGluZy10b3A6IDRyZW07IH1cblxuLnBhZGRpbmctdG9wLTUge1xuICBwYWRkaW5nLXRvcDogNXJlbTsgfVxuXG4ucGFkZGluZy10b3AtNiB7XG4gIHBhZGRpbmctdG9wOiA2cmVtOyB9XG5cbi5wYWRkaW5nLXRvcC03IHtcbiAgcGFkZGluZy10b3A6IDdyZW07IH1cblxuLnBhZGRpbmctdG9wLTgge1xuICBwYWRkaW5nLXRvcDogOHJlbTsgfVxuXG4ucGFkZGluZy1ib3R0b20tMSB7XG4gIHBhZGRpbmctYm90dG9tOiAxcmVtOyB9XG5cbi5wYWRkaW5nLWJvdHRvbS0yIHtcbiAgcGFkZGluZy1ib3R0b206IDJyZW07IH1cblxuLnBhZGRpbmctYm90dG9tLTMge1xuICBwYWRkaW5nLWJvdHRvbTogM3JlbTsgfVxuXG4ucGFkZGluZy1ib3R0b20tNCB7XG4gIHBhZGRpbmctYm90dG9tOiA0cmVtOyB9XG5cbi5wYWRkaW5nLWJvdHRvbS01IHtcbiAgcGFkZGluZy1ib3R0b206IDVyZW07IH1cblxuLnBhZGRpbmctYm90dG9tLTYge1xuICBwYWRkaW5nLWJvdHRvbTogNnJlbTsgfVxuXG4ucGFkZGluZy1ib3R0b20tNyB7XG4gIHBhZGRpbmctYm90dG9tOiA3cmVtOyB9XG5cbi5wYWRkaW5nLWJvdHRvbS04IHtcbiAgcGFkZGluZy1ib3R0b206IDhyZW07IH1cblxuLm1hcmdpbi10b3AtMSB7XG4gIG1hcmdpbi10b3A6IDFyZW07IH1cblxuLm1hcmdpbi10b3AtMiB7XG4gIG1hcmdpbi10b3A6IDJyZW07IH1cblxuLm1hcmdpbi10b3AtMyB7XG4gIG1hcmdpbi10b3A6IDNyZW07IH1cblxuLm1hcmdpbi10b3AtNCB7XG4gIG1hcmdpbi10b3A6IDRyZW07IH1cblxuLm1hcmdpbi10b3AtNSB7XG4gIG1hcmdpbi10b3A6IDVyZW07IH1cblxuLm1hcmdpbi10b3AtNiB7XG4gIG1hcmdpbi10b3A6IDZyZW07IH1cblxuLm1hcmdpbi10b3AtNyB7XG4gIG1hcmdpbi10b3A6IDdyZW07IH1cblxuLm1hcmdpbi10b3AtOCB7XG4gIG1hcmdpbi10b3A6IDhyZW07IH1cblxuLm1hcmdpbi1ib3R0b20tMSB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07IH1cblxuLm1hcmdpbi1ib3R0b20tMiB7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07IH1cblxuLm1hcmdpbi1ib3R0b20tMyB7XG4gIG1hcmdpbi1ib3R0b206IDNyZW07IH1cblxuLm1hcmdpbi1ib3R0b20tNCB7XG4gIG1hcmdpbi1ib3R0b206IDRyZW07IH1cblxuLm1hcmdpbi1ib3R0b20tNSB7XG4gIG1hcmdpbi1ib3R0b206IDVyZW07IH1cblxuLm1hcmdpbi1ib3R0b20tNiB7XG4gIG1hcmdpbi1ib3R0b206IDZyZW07IH1cblxuLm1hcmdpbi1ib3R0b20tNyB7XG4gIG1hcmdpbi1ib3R0b206IDdyZW07IH1cblxuLm1hcmdpbi1ib3R0b20tOCB7XG4gIG1hcmdpbi1ib3R0b206IDhyZW07IH1cblxuLm1hcmdpbi1sZWZ0LTEge1xuICBtYXJnaW4tbGVmdDogMXJlbTsgfVxuXG4ubWFyZ2luLWxlZnQtMiB7XG4gIG1hcmdpbi1sZWZ0OiAycmVtOyB9XG5cbi5tYXJnaW4tbGVmdC0zIHtcbiAgbWFyZ2luLWxlZnQ6IDNyZW07IH1cblxuLm1hcmdpbi1sZWZ0LTQge1xuICBtYXJnaW4tbGVmdDogNHJlbTsgfVxuXG4ubWFyZ2luLWxlZnQtNSB7XG4gIG1hcmdpbi1sZWZ0OiA1cmVtOyB9XG5cbi5tYXJnaW4tbGVmdC02IHtcbiAgbWFyZ2luLWxlZnQ6IDZyZW07IH1cblxuLm1hcmdpbi1sZWZ0LTcge1xuICBtYXJnaW4tbGVmdDogN3JlbTsgfVxuXG4ubWFyZ2luLWxlZnQtOCB7XG4gIG1hcmdpbi1sZWZ0OiA4cmVtOyB9XG5cbi5tYXJnaW4tcmlnaHQtMSB7XG4gIG1hcmdpbi1yaWdodDogMXJlbTsgfVxuXG4ubWFyZ2luLXJpZ2h0LTIge1xuICBtYXJnaW4tcmlnaHQ6IDJyZW07IH1cblxuLm1hcmdpbi1yaWdodC0zIHtcbiAgbWFyZ2luLXJpZ2h0OiAzcmVtOyB9XG5cbi5tYXJnaW4tcmlnaHQtNCB7XG4gIG1hcmdpbi1yaWdodDogNHJlbTsgfVxuXG4ubWFyZ2luLXJpZ2h0LTUge1xuICBtYXJnaW4tcmlnaHQ6IDVyZW07IH1cblxuLm1hcmdpbi1yaWdodC02IHtcbiAgbWFyZ2luLXJpZ2h0OiA2cmVtOyB9XG5cbi5tYXJnaW4tcmlnaHQtNyB7XG4gIG1hcmdpbi1yaWdodDogN3JlbTsgfVxuXG4ubWFyZ2luLXJpZ2h0LTgge1xuICBtYXJnaW4tcmlnaHQ6IDhyZW07IH1cblxuLnBhZGRpbmctMSB7XG4gIHBhZGRpbmc6IDFyZW07IH1cblxuLnBhZGRpbmctMiB7XG4gIHBhZGRpbmc6IDJyZW07IH1cblxuLnBhZGRpbmctMyB7XG4gIHBhZGRpbmc6IDNyZW07IH1cblxuLnBhZGRpbmctNCB7XG4gIHBhZGRpbmc6IDRyZW07IH1cblxuLm1hcmdpbi0xIHtcbiAgbWFyZ2luOiAxcmVtOyB9XG5cbi5tYXJnaW4tMiB7XG4gIG1hcmdpbjogMnJlbTsgfVxuXG4ubWFyZ2luLTMge1xuICBtYXJnaW46IDNyZW07IH1cblxuLm1hcmdpbi00IHtcbiAgbWFyZ2luOiA0cmVtOyB9XG5cbi8qKioqKioqKioqKioqKioqKioqKipcbiAgTWVkaWEgUXVlcnkgQ2xhc3Nlc1xuKioqKioqKioqKioqKioqKioqKioqKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgLmhpZGUtb24tc21hbGwtb25seSwgLmhpZGUtb24tc21hbGwtYW5kLWRvd24ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmhpZGUtb24tbWVkLWFuZC1kb3duIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUyMXB4KSB7XG4gIC5oaWRlLW9uLW1lZC1hbmQtdXAge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTIwcHgpIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICAuaGlkZS1vbi1tZWQtb25seSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTNweCkge1xuICAuaGlkZS1vbi1sYXJnZS1vbmx5IHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDFweCkge1xuICAuaGlkZS1vbi1leHRyYS1sYXJnZS1vbmx5IHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDFweCkge1xuICAuc2hvdy1vbi1leHRyYS1sYXJnZSB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkzcHgpIHtcbiAgLnNob3ctb24tbGFyZ2Uge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUyMHB4KSBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnNob3ctb24tbWVkaXVtIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAuc2hvdy1vbi1zbWFsbCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTIxcHgpIHtcbiAgLnNob3ctb24tbWVkaXVtLWFuZC11cCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnNob3ctb24tbWVkaXVtLWFuZC1kb3duIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAuY2VudGVyLW9uLXNtYWxsLW9ubHkge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG5cbkBtZWRpYSBwcmludCB7XG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsgfVxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiOyB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7IH1cbiAgLmlyIGE6YWZ0ZXIsXG4gIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gIEBwYWdlIHtcbiAgICBtYXJnaW46IDAuNWNtOyB9XG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7IH1cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDsgfSB9XG4iLCIqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG59XG5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgZm9udDogMzAwIDEzcHgvMS42ICdnaWJzb25yZWd1bGFyJywgSGVsdmV0aWNhLCBBcmlhbDtcbiAgICBjb2xvcjogJGdyZXk7XG4gICAgdHJhbnNpdGlvbjogYWxsIC40cyAuM3MgZWFzZS1pbjtcbn1cbiIsIiRiYXNlIDogI0Y3RjZGMDtcbiRkYXJrZW4gOiBkYXJrZW4oI0Y3RjZGMCAsIDMwJSk7XG4kYmFjazogZGFya2VuKCNGN0Y2RjAsIDQwJSk7XG5cbiR3aGl0ZTogI0ZGRjtcbiRicmFuZC1wcmltYXJ5OiAjODdENkFGO1xuXG4kbGlnaHQtZ3JleTogI2U5ZThlODtcbiRsaWdodC1ncmV5LTI6ICM3YzdjN2M7XG4kZ3JleTogIzRjNGM0YztcbiIsIi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLCAvKiAxICovXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbiwgLyogMiAqL1xubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHsgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSwgLyogMSAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSB0ZXh0IHN0eWxlIG9mIHBsYWNlaG9sZGVycyBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuIiwiLmhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kLXByaW1hcnk7XG4gICAgaGVpZ2h0OiA3M3B4O1xuICAgIHotaW5kZXg6IDM7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbn1cblxuLmxvZ28ge1xuICAgIHBhZGRpbmc6IDJyZW0gMCAwIDFyZW07XG4gICAgZmxvYXQ6IGxlZnQ7XG4gIGltZyB7IHdpZHRoOiAxNDJweDsgfVxufVxuXG4ubmF2IHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIHVsIHtcbiAgICAgICAgICBwYWRkaW5nOiAycmVtIDFyZW0gMCAwO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgZm9udC1mYW1pbHk6ICdnaWJzb25yZWd1bGFyJztcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgICB9XG59XG4iLCIubmF2IHtcbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbGkge1xuICAgICAgYSB7XG5cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmctbGVmdDogNSU7XG4gICAgcGFkZGluZy1yaWdodDogNSU7XG5cblxufVxuXG4ucm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xuICB3aWR0aDogMTAwJTtcblxuICAuY29sdW1uIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleDogMTtcbiAgfVxuXG4gIC8vIEBpbmNsdWRlIHNjcmVlbignbWVkLXNtYWxsJywgJ21heCcpIHtcbiAgLy8gICAgIGRpc3BsYXk6IGJsb2NrO1xuICAvLyB9XG5cbn1cblxuLmxpZ2h0LWdyZXktYmtnIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHQtZ3JleTtcbiAgICAuaDIge1xuICAgICAgICBjb2xvcjogJGdyZXk7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgfVxufVxuXG4ud2hpdGUtYmtnIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uc2VjdGlvbi1ia2cge1xuICAgIGltZyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLTFyZW07XG4gICAgfVxuXG59XG5cbi5oMiB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDRyZW07XG4gICAgY29sb3I6ICRicmFuZC1wcmltYXJ5O1xuICAgIGZvbnQtZmFtaWx5OiAnZ2lic29uc2VtaWJvbGQnO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG5cbi53cmFwcGVyIHtcbiAgICBtYXgtd2lkdGg6IDY4OHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubWFpbiB7XG5cbiAgICBtYXJnaW4tdG9wOiA3M3B4O1xuXG4gICAgLnZpZGVvLXRvcCB7XG4gICAgICAgIC5ob3ZlckVmZmVjdCAuY29sdW1uIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDUlO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgICAgIH1cblxuICAgIH1cbiAgICAudmlkZW8tYm90dG9te1xuICAgICAgICAuaG92ZXJFZmZlY3QgLmNvbHVtbiB7XG4gICAgICAgICAgICBwYWRkaW5nOiA1JTtcblxuICAgICAgICAgICAgJjpudGgtY2hpbGQoMSkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5oZXJvLWJhbm5lciB7XG5cbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kLXByaW1hcnk7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICBAaW5jbHVkZSBzY3JlZW4oJ21lZC1zbWFsbCcsICdtaW4nKSB7XG5cbiAgICAgICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDcycHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvcGxlY2EucG5nJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIGJvdHRvbTogLTY1cHg7XG4gICAgICAgICAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXk6IGJvdHRvbTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgc2NyZWVuKCdtZWQtc21hbGwnLCAnbWF4Jykge1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDJyZW07XG4gICAgICAgIH1cblxuICAgICAgICAmX193cmFwcGVyIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0ycHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAxcmVtIDA7XG4gICAgICAgICAgICBoMSB7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdnaWJzb25zZW1pYm9sZCc7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDRyZW07XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTtcblxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHNjcmVlbignbWVkLXNtYWxsJywgJ21heCcpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgc2NyZWVuKCdzbWFsbCcsICdtYXgnKXtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGg2IHtcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ2dpYnNvbmxpZ2h0JztcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG5cbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBzY3JlZW4oJ3NtYWxsJywgJ21heCcpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjRyZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICAubWFpbi1zZWN0aW9uIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogOHJlbTtcblxuICAgICAgICBAaW5jbHVkZSBzY3JlZW4oJ3NtYWxsJywgJ21heCcpe1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDRyZW07XG4gICAgICAgIH1cblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIH1cblxuICAgICAgICBoMiB7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGdpYnNvbmxpZ2h0O1xuICAgICAgICAgICAgZm9udC1zaXplOiA0cmVtO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIHNjcmVlbignbWVkLXNtYWxsJywgJ21heCcpe1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgQGluY2x1ZGUgc2NyZWVuKCdzbWFsbCcsICdtYXgnKXtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuaW1nQmFubmVyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ4MHB4O1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHNjcmVlbignc21hbGwnLCAnbWF4Jykge1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDI0MHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHAge1xuICAgICAgICAgICAgbWFyZ2luOiAycmVtIDA7XG4gICAgICAgICAgICBmb250LWZhbWlseTogJ2dpYnNvbmxpZ2h0JztcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcblxuICAgICAgICAgICAgQGluY2x1ZGUgc2NyZWVuKCdzbWFsbCcsICdtYXgnKSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjRyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIC5ncmV5LWJhbm5lciB7XG5cbiAgICAgICAgQGluY2x1ZGUgc2NyZWVuKCdtZWQtc21hbGwnLCAnbWF4Jykge1xuICAgICAgICAgICAgcGFkZGluZzogNSUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcblxuICAgICAgICAgICAgaDIge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBzY3JlZW4oJ3NtYWxsJywgJ21heCcpIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDNyZW0gMnJlbSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgaDIgeyBmb250LXNpemU6IDJyZW07fVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiLy8gRGVmaW5lIHRoZSBicmVha3BvaW50c1xuJGJyZWFrcG9pbnQtc21hbGw6IDUyMHB4O1xuJGJyZWFrcG9pbnQtbWVkLXNtYWxsOiA3NjdweDtcbiRicmVha3BvaW50LW1lZDogOTkycHg7XG4kYnJlYWtwb2ludC1sYXJnZTogMTIwMHB4O1xuXG5AbWl4aW4gc2NyZWVuKCRzaXplLCAkdHlwZTogbWF4LCAkcGl4ZWxzOiAkYnJlYWtwb2ludC1zbWFsbCkge1xuICBAaWYgJHNpemUgPT0gJ3NtYWxsJyB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKCR0eXBlICsgLXdpZHRoOiAkYnJlYWtwb2ludC1zbWFsbCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbiAgQGVsc2UgaWYgJHNpemUgPT0gJ21lZC1zbWFsbCcge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kICgkdHlwZSArIC13aWR0aDogJGJyZWFrcG9pbnQtbWVkLXNtYWxsKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkc2l6ZSA9PSAnbWVkJyB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKCR0eXBlICsgLXdpZHRoOiAkYnJlYWtwb2ludC1tZWQpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG4gQGVsc2UgaWYgJHNpemUgPT0gJ2xhcmdlJyB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKCR0eXBlICsgLXdpZHRoOiAkYnJlYWtwb2ludC1sYXJnZSkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbiAgQGVsc2UgaWYgJHNpemUgPT0gJ2N1c3RvbScge1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kICgkdHlwZSArIC13aWR0aDogJHBpeGVscyArIHB4KSB7XG4gICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuICBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi5mb290ZXIge1xuXG4gICAgaDIge1xuICAgICAgICBsaW5lLWhlaWdodDogMS4zO1xuICAgIH1cblxuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5O1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgZm9udC1zaXplOiAyLjRyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDRyZW0gMDtcblxuICAgIEBpbmNsdWRlIHNjcmVlbignbWVkLXNtYWxsJywgJ21heCcpe1xuICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICB9XG5cbiAgICB1bC5mb290ZXItc29jaWFsIHtcblxuICAgICAgICBwYWRkaW5nOiA0cmVtIDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDU1cHg7XG5cbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBzY3JlZW4oJ21lZC1zbWFsbCcsICdtYXgnKXtcbiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMjVweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxufVxuIiwiLmJ1dHRvbiB7XG4gIG1pbi13aWR0aDogMTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMXJlbSAycmVtO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAycmVtO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBjb2xvcjogJHdoaXRlO1xuICBoZWlnaHQ6IDYwcHg7XG5cbiAgQGluY2x1ZGUgc2NyZWVuKCdzbWFsbCcsICdtYXgnKSB7XG4gICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICAgIHBhZGRpbmc6IDFyZW07XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5cbiAgPiBzcGFuIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB9XG5cbiAgJi0tYW50aW1hbiB7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAvLyBib3JkZXI6IDNweCBzb2xpZCAkYnJhbmQtcHJpbWFyeTtcblxuICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCBvcGFjaXR5IDAuM3M7XG4gICAgfVxuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGJvcmRlcjogM3B4IHNvbGlkICRicmFuZC1wcmltYXJ5O1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUzZCgxLjIsIDEuMiwgMSk7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJGJyYW5kLXByaW1hcnk7XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAkYnJhbmQtcHJpbWFyeTtcbiAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUzZCgxLCAxLCAxKTtcbiAgICAgIH1cblxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC44LCAwLjgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKiBBbnRpbWFuICovXG4iLCJAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ2dpYnNvbmJvbGQtaXRhbGljJztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvZ2lic29uLWJvbGQtaXRhbGljLXdlYmZvbnQuZW90Jyk7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1ib2xkLWl0YWxpYy13ZWJmb250LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1ib2xkLWl0YWxpYy13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24tYm9sZC1pdGFsaWMtd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1ib2xkLWl0YWxpYy13ZWJmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLWJvbGQtaXRhbGljLXdlYmZvbnQuc3ZnI2dpYnNvbmJvbGRfaXRhbGljJykgZm9ybWF0KCdzdmcnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcblxufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ2dpYnNvbmJvbGQnO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9naWJzb24tYm9sZC13ZWJmb250LmVvdCcpO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9naWJzb24tYm9sZC13ZWJmb250LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1ib2xkLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1ib2xkLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24tYm9sZC13ZWJmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLWJvbGQtd2ViZm9udC5zdmcjZ2lic29uYm9sZCcpIGZvcm1hdCgnc3ZnJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG5cbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdnaWJzb25pdGFsaWMnO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9naWJzb24taXRhbGljLXdlYmZvbnQuZW90Jyk7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1pdGFsaWMtd2ViZm9udC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24taXRhbGljLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1pdGFsaWMtd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1pdGFsaWMtd2ViZm9udC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1pdGFsaWMtd2ViZm9udC5zdmcjZ2lic29uaXRhbGljJykgZm9ybWF0KCdzdmcnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcblxufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ2dpYnNvbmxpZ2h0LWl0YWxpYyc7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1saWdodC1pdGFsaWMtd2ViZm9udC5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvZ2lic29uLWxpZ2h0LWl0YWxpYy13ZWJmb250LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1saWdodC1pdGFsaWMtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLWxpZ2h0LWl0YWxpYy13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLWxpZ2h0LWl0YWxpYy13ZWJmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLWxpZ2h0LWl0YWxpYy13ZWJmb250LnN2ZyNnaWJzb25saWdodF9pdGFsaWMnKSBmb3JtYXQoJ3N2ZycpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuXG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnZ2lic29ubGlnaHQnO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9naWJzb24tbGlnaHQtd2ViZm9udC5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvZ2lic29uLWxpZ2h0LXdlYmZvbnQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLWxpZ2h0LXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1saWdodC13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLWxpZ2h0LXdlYmZvbnQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24tbGlnaHQtd2ViZm9udC5zdmcjZ2lic29ubGlnaHQnKSBmb3JtYXQoJ3N2ZycpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuXG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnZ2lic29uc2VtaWJvbGQtaXRhbGljJztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvZ2lic29uLXNlbWlib2xkLWl0YWxpYy13ZWJmb250LmVvdCcpO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9naWJzb24tc2VtaWJvbGQtaXRhbGljLXdlYmZvbnQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLXNlbWlib2xkLWl0YWxpYy13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24tc2VtaWJvbGQtaXRhbGljLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24tc2VtaWJvbGQtaXRhbGljLXdlYmZvbnQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24tc2VtaWJvbGQtaXRhbGljLXdlYmZvbnQuc3ZnI2dpYnNvbnNlbWlib2xkX2l0YWxpYycpIGZvcm1hdCgnc3ZnJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG5cbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdnaWJzb25zZW1pYm9sZCc7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1zZW1pYm9sZC13ZWJmb250LmVvdCcpO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9naWJzb24tc2VtaWJvbGQtd2ViZm9udC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24tc2VtaWJvbGQtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLXNlbWlib2xkLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24tc2VtaWJvbGQtd2ViZm9udC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi1zZW1pYm9sZC13ZWJmb250LnN2ZyNnaWJzb25zZW1pYm9sZCcpIGZvcm1hdCgnc3ZnJyk7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG5cbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdnaWJzb25yZWd1bGFyJztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvZ2lic29uLXdlYmZvbnQuZW90Jyk7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2dpYnNvbi13ZWJmb250LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICAgICAgICAgdXJsKCcuLi9mb250cy9naWJzb24td2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2dpYnNvbi13ZWJmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvZ2lic29uLXdlYmZvbnQuc3ZnI2dpYnNvbnJlZ3VsYXInKSBmb3JtYXQoJ3N2ZycpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuXG59XG4iLCI6OnNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuOjotbW96LXNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuOjotd2Via2l0LXNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuIiwiXG4ubWVudSB7XG5cblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdHJpZ2h0OiAwO1xuXHR6LWluZGV4OiAxMDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHdpZHRoOiA2N3B4O1xuXHRoZWlnaHQ6IDY3cHg7XG5cdHRleHQtYWxpZ246IGxlZnQ7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHotaW5kZXg6IDM7XG5cbiAgICAmX19idXR0b24ge1xuICAgIFx0cG9zaXRpb246IHJlbGF0aXZlO1xuICAgIFx0ei1pbmRleDogMTA7XG4gICAgXHRkaXNwbGF5OiBibG9jaztcbiAgICBcdG92ZXJmbG93OiBoaWRkZW47XG4gICAgXHR3aWR0aDogMTAwJTtcbiAgICBcdGhlaWdodDogMTAwJTtcbiAgICBcdGN1cnNvcjogcG9pbnRlcjtcbiAgICBcdHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjZzIGN1YmljLWJlemllcigwLjIsIDEsIDAuMywgMSk7XG4gICAgXHRiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgIFx0b3V0bGluZTogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgJl9fdGV4dCB7XG4gICAgXHRkaXNwbGF5OiBibG9jaztcbiAgICBcdHBhZGRpbmc6IDJyZW0gMXJlbSAwIDA7XG4gICAgXHRmb250LXdlaWdodDogNDAwO1xuICAgIFx0Zm9udC1zaXplOiAxLjI1ZW07XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNnMgY3ViaWMtYmV6aWVyKDAuMiwgMSwgMC4zLCAxKTtcbiAgICB9XG5cbiAgICAmX19vcGVuIHtcbiAgICBcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBcdHRvcDogMDtcbiAgICBcdHJpZ2h0OiAwO1xuICAgIFx0b3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBcdHdpZHRoOiAyMjBweDtcbiAgICBcdC8vIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgICAgICAmLWlubmVyIHtcbiAgICAgICAgXHRwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIFx0cGFkZGluZzogMmVtIDEuOWVtO1xuICAgICAgICBcdG9wYWNpdHk6IDA7XG5cbiAgICAgICAgICAgIC5tZW51X19saXN0IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICAvLyBtYXgtd2lkdGg6IDc3JTtcblxuICAgICAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ2dpYnNvbnNlbWlib2xkJztcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogM3JlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgIFx0Y29udGVudDogJyc7XG4gICAgICAgIFx0cG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBcdHRvcDogMDtcbiAgICAgICAgXHRsZWZ0OiAwO1xuICAgICAgICBcdHdpZHRoOiAxMDAlO1xuICAgICAgICBcdGhlaWdodDogMTAwJTtcbiAgICAgICAgXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIC0xMDAlLCAwKSB0cmFuc2xhdGUzZCgtNjdweCwgNjdweCwgMCk7XG4gICAgICAgIFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNnMgY3ViaWMtYmV6aWVyKDAuMiwgMSwgMC4zLCAxKTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgJl9fY2xvc2Uge1xuICAgIFx0cG9zaXRpb246IGFic29sdXRlO1xuICAgIFx0dG9wOiAxLjVlbTtcbiAgICBcdHJpZ2h0OiAxLjVlbTtcbiAgICBcdG92ZXJmbG93OiBoaWRkZW47XG4gICAgXHR3aWR0aDogMjBweDtcbiAgICBcdGhlaWdodDogMjBweDtcbiAgICBcdGJvcmRlcjogbm9uZTtcbiAgICBcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCguLi9pbWcvbWVudS1jbG9zZS5wbmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuXHRcdGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICBcdGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBcdHRleHQtaW5kZW50OiAxMDAlO1xuICAgIFx0b3BhY2l0eTogMDtcbiAgICBcdHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoNTBweCwgMCwgMCk7XG4gICAgXHRiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICBcdG91dGxpbmU6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19zb2NpYWwge1xuICAgICAgICBwYWRkaW5nOiAycmVtIDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBsaSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgaW1nIHsgbWF4LWhlaWdodDogMjBweCB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1hY3RpdmUge1xuXG4gICAgICAgIC5tZW51X19idXR0b24ge1xuICAgICAgICBcdGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDQ5MCUsIDAsIDApO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1lbnVfX29wZW4ge1xuICAgICAgICBcdHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1lbnVfX3RleHQge1xuICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4xcyBlYXNlO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1lbnVfX29wZW46OmJlZm9yZSB7XG4gICAgICAgIFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgXHR0cmFuc2l0aW9uLWRlbGF5OiAwcztcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0YzRjNGM7XG4gICAgICAgIH1cblxuICAgICAgICAubWVudV9fb3Blbi1pbm5lciB7XG4gICAgICAgIFx0b3BhY2l0eTogMTtcbiAgICAgICAgXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNnMgY3ViaWMtYmV6aWVyKDAuMiwgMSwgMC4zLCAxKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZW51X19jbG9zZSB7XG4gICAgICAgIFx0b3BhY2l0eTogMTtcbiAgICAgICAgXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgICAgICBcdHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjZzIGN1YmljLWJlemllcigwLjIsIDEsIDAuMywgMSksIG9wYWNpdHkgMC42cyBjdWJpYy1iZXppZXIoMC4yLCAxLCAwLjMsIDEpO1xuICAgICAgICBcdHRyYW5zaXRpb24tZGVsYXk6IDAuMDE1cztcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgaHIge1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjYWFhYWFhO1xuICAgICAgICBtYXJnaW46IDNyZW0gMnJlbSAxcmVtO1xuICAgIH1cblxufVxuXG5cbiNjb21vLWF5dWRhLCAjY29ub2NlLXRydXNlbnMsICNob2dhci1zYWx1ZGFibGUge1xuXHRzY3JvbGwtbWFyZ2luLXRvcDogNzNweDtcbn1cbiIsIlxuLnN3aXBlci1jb250YWluZXIge1xuICAgIC5zd2lwZXItYnV0dG9uLW5leHQsIC5zd2lwZXItYnV0dG9uLXByZXYge1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICBwYWRkaW5nOiAwIDFyZW0gMCAxcmVtO1xuICAgIH1cbiAgICAuc3dpcGVyLXBhZ2luYXRpb24ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIG1hcmdpbjogNHJlbSAwIDNyZW07XG5cbiAgICAgICAgJi1idWxsZXQge1xuICAgICAgICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwcHg7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAkbGlnaHQtZ3JleS0yO1xuICAgICAgICB9XG5cbiAgICAgICAgJi1idWxsZXQtYWN0aXZlIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZC1wcmltYXJ5XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5oZXJvLXNsaWRlciB7XG4gICAgLnN3aXBlci1jb250YWluZXIge1xuICAgICAgICAvLyB3aWR0aDogNjAwcHg7XG4gICAgICAgIC8vIG1heC1oZWlnaHQ6IDc1MHB4O1xuXG4gICAgICAgIC5zd2lwZXItcGFnaW5hdGlvbiB7XG4gICAgICAgICAgICAmLWJ1bGxldC1hY3RpdmUge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuc3dpcGVyLXNsaWRlIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgICAgICAgJl9fY29udGVudCB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgICAgICAgICAgdG9wOiBhdXRvO1xuICAgICAgICAgICAgICAgIGJvdHRvbTogNHJlbTtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA3NDBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHNjcmVlbignc21hbGwnLCAnbWF4Jyl7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMnJlbTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBoMiB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnZ2lic29uYm9sZCc7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1zaGFkb3c6IDAgMCA0MHB4ICM1RTVFNUU7XG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHNjcmVlbignbWVkLXNtYWxsJywgJ21heCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBzY3JlZW4oJ3NtYWxsJywgJ21heCcpe1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5wcm9kdWN0LXNsaWRlciB7XG5cbiAgICAuc3dpcGVyLWNvbnRhaW5lciB7XG4gICAgIHdpZHRoOiAxMDAlO1xuICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgfVxuXG4gICAuZ2FsbGVyeS10b3Age1xuICAgICBoZWlnaHQ6IGF1dG87XG4gICAgIHdpZHRoOiAxMDAlO1xuICAgICBAaW5jbHVkZSBzY3JlZW4oJ21lZC1zbWFsbCcsICdtaW4nKSB7XG4gICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgfVxuXG4gICAgIC5zd2lwZXItc2xpZGUge1xuICAgICAgICAgaDIgeyBmb250LWZhbWlseTogJ2dpYnNvbmJvbGQnfVxuICAgICB9XG5cbiAgICAgLnN3aXBlci1wYWdpbmF0aW9uIHtcbiAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgIGJvdHRvbTogLTIzMHB4O1xuICAgICAgICAgei1pbmRleDogOTlcbiAgICAgfVxuXG4gICB9XG4gICAuZ2FsbGVyeS10aHVtYnMge1xuICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgICAgLy8gYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgLy8gcGFkZGluZzogMTBweCAwO1xuXG4gICAgIEBpbmNsdWRlIHNjcmVlbignc21hbGwnLCAnbWluJyl7XG4gICAgICAgICBwYWRkaW5nLWJvdHRvbTogNjBweDtcbiAgICAgICAgIG1hcmdpbi10b3A6IDRyZW07XG4gICAgIH1cblxuICAgfVxuICAgLmdhbGxlcnktdGh1bWJzIC5zd2lwZXItc2xpZGUge1xuICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgIG9wYWNpdHk6IDAuNDtcbiAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBlYXNlLWluLW91dDtcblxuICAgICAmOmhvdmVyIHtcbiAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgIH1cbiAgIH1cbiAgIC5nYWxsZXJ5LXRodW1icyAuc3dpcGVyLXNsaWRlLXRodW1iLWFjdGl2ZSB7XG4gICAgIG9wYWNpdHk6IDE7XG4gICB9XG5cbn1cblxuLmJsb2NrcXVvdGUtc2xpZGVyIHtcbiAgICAuc3dpcGVyLWNvbnRhaW5lciB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIC8vIGhlaWdodDogMTAwJTtcbiAgICAgIC8vIG1heC1oZWlnaHQ6IDQ4MHB4O1xuICAgICAgLnN3aXBlci1wYWdpbmF0aW9uIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogNnB4O1xuICAgICAgfVxuICAgIH1cbiAgICAuc3dpcGVyLXNsaWRlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZXk7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgICZfX2ltYWdlIHtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgIC8vIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIHdpZHRoOiA0MCU7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtNnB4O1xuICAgICAgICAgIGhlaWdodDogNDgwcHg7XG5cbiAgICAgICAgICBAaW5jbHVkZSBzY3JlZW4oJ3NtYWxsJywgJ21heCcpe1xuICAgICAgICAgICAgICBoZWlnaHQ6IDM4MHB4O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDUyMHB4O1xuICAgICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJl9fY29udGVudCB7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgICAgcGFkZGluZzogMCAycmVtO1xuXG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDcyMXB4KXtcbiAgICAgICAgICAgICAgcGFkZGluZzogMCA2cmVtO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM7XG5cbiAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDg5MHB4KXtcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzIwcHgpe1xuICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NjBweCl7XG4gICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvLyBtYXgtd2lkdGg6IDYwMHB4O1xuICAgICAgICAgIH1cblxuICAgICAgICAgICYtLWF1dGhvciB7XG4gICAgICAgICAgICAgIC8vIG1heC13aWR0aDogNjAwcHg7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuXG4gICAgICAgICAgICAgIEBpbmNsdWRlIHNjcmVlbignc21hbGwnLCAnbWF4Jyl7XG4gICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgICYtLXN0YXJzIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICBtYXJnaW46IDJyZW0gYXV0byAwIDtcbiAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiAxOHB4O1xuICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIC40cmVtO1xuICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgc2NyZWVuKCdzbWFsbCcsICdtYXgnKXtcbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTBweFxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0qL1xuLyoqKioqIGhvdmVyRWZmZWN0ICoqKioqL1xuLyotLS0tLS0tLS0tLS0tLS0qL1xuXG4uaG92ZXJFZmZlY3Qge1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGZpZ3VyZSB7XG4gICAgXHRwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgXHRvdmVyZmxvdzogaGlkZGVuO1xuICAgIFx0bWFyZ2luOiAwO1xuICAgIFx0YmFja2dyb3VuZDogIzAwMDtcbiAgICBcdHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBcdGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgICA+IGltZyB7XG4gICAgICAgIFx0cG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBcdGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBcdG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgIFx0bWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICBcdG9wYWNpdHk6IDAuODtcbiAgICAgICAgfVxuXG4gICAgICAgIGZpZ2NhcHRpb24ge1xuICAgICAgICBcdHBhZGRpbmc6IDJlbTtcbiAgICAgICAgXHRjb2xvcjogI2ZmZjtcbiAgICAgICAgXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBcdGZvbnQtc2l6ZTogMS4yNWVtO1xuICAgICAgICBcdGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblxuICAgICAgICAgICAgJjo6YmVmb3JlLFxuICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgXHRwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZpZ2NhcHRpb24sXG4gICAgICAgIGZpZ2NhcHRpb24gPiBhIHtcbiAgICAgICAgXHRwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIFx0dG9wOiAwO1xuICAgICAgICBcdGxlZnQ6IDA7XG4gICAgICAgIFx0d2lkdGg6IDEwMCU7XG4gICAgICAgIFx0aGVpZ2h0OiAxMDAlO1xuICAgICAgICB9XG5cblxuICAgIH1cblxuICAgICYtaGVhZGluZyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGxlZnQ6IDJyZW07XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuXG4gICAgaDMge1xuICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgIG1hcmdpbjogMXJlbSAwO1xuXHRcdEBpbmNsdWRlIHNjcmVlbignbWVkLXNtYWxsJywgJ21heCcpe1xuXHRcdFx0Zm9udC1zaXplOiAxLjhyZW07XG5cdFx0fVxuXHRcdEBpbmNsdWRlIHNjcmVlbignc21hbGwnLCAnbWF4Jyl7XG5cdFx0XHRmb250LXNpemU6IDEuNHJlbTtcblx0XHR9XG4gICAgfVxufVxuXG4uZWZmZWN0LWNoaWNvIHtcbiAgICA+IGltZyB7XG4gICAgXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzLCB0cmFuc2Zvcm0gMC4zNXM7XG4gICAgXHR0cmFuc2Zvcm06IHNjYWxlKDEuMTIpO1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgICA+IGltZyB7XG4gICAgICAgIFx0b3BhY2l0eTogMC4zO1xuICAgICAgICBcdHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICAgIH1cblxuICAgICAgICBmaWdjYXB0aW9uOjpiZWZvcmUsXG4gICAgICAgIC5wbGF5ICB7XG4gICAgICAgIFx0b3BhY2l0eTogMTtcbiAgICAgICAgXHR0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICBmaWdjYXB0aW9uIHtcbiAgICBcdC8vIHBhZGRpbmc6IDNlbTtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgXHRwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIFx0Y29udGVudDogJyc7XG4gICAgICAgIFx0dHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzLCB0cmFuc2Zvcm0gMC4zNXM7XG4gICAgICAgIH1cblxuICAgICAgICAucGxheSB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCguLi9pbWcvcGxheS1idXR0b24ucG5nKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogMTYwcHg7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzLCB0cmFuc2Zvcm0gMC4zNXM7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuNSk7XG4gICAgICAgIH1cblxuICAgIH1cblxufVxuIiwiLnBhZGRpbmctdG9wIHtcbiAgICAmLTEgeyBwYWRkaW5nLXRvcDogMXJlbTsgfVxuICAgICYtMiB7IHBhZGRpbmctdG9wOiAycmVtOyB9XG4gICAgJi0zIHsgcGFkZGluZy10b3A6IDNyZW07IH1cbiAgICAmLTQgeyBwYWRkaW5nLXRvcDogNHJlbTsgfVxuICAgICYtNSB7IHBhZGRpbmctdG9wOiA1cmVtOyB9XG4gICAgJi02IHsgcGFkZGluZy10b3A6IDZyZW07IH1cbiAgICAmLTcgeyBwYWRkaW5nLXRvcDogN3JlbTsgfVxuICAgICYtOCB7IHBhZGRpbmctdG9wOiA4cmVtOyB9XG59XG5cbi5wYWRkaW5nLWJvdHRvbSB7XG4gICAgJi0xIHsgcGFkZGluZy1ib3R0b206IDFyZW07IH1cbiAgICAmLTIgeyBwYWRkaW5nLWJvdHRvbTogMnJlbTsgfVxuICAgICYtMyB7IHBhZGRpbmctYm90dG9tOiAzcmVtOyB9XG4gICAgJi00IHsgcGFkZGluZy1ib3R0b206IDRyZW07IH1cbiAgICAmLTUgeyBwYWRkaW5nLWJvdHRvbTogNXJlbTsgfVxuICAgICYtNiB7IHBhZGRpbmctYm90dG9tOiA2cmVtOyB9XG4gICAgJi03IHsgcGFkZGluZy1ib3R0b206IDdyZW07IH1cbiAgICAmLTggeyBwYWRkaW5nLWJvdHRvbTogOHJlbTsgfVxufVxuXG4ubWFyZ2luLXRvcCB7XG4gICAgJi0xIHsgbWFyZ2luLXRvcDogMXJlbTsgfVxuICAgICYtMiB7IG1hcmdpbi10b3A6IDJyZW07IH1cbiAgICAmLTMgeyBtYXJnaW4tdG9wOiAzcmVtOyB9XG4gICAgJi00IHsgbWFyZ2luLXRvcDogNHJlbTsgfVxuICAgICYtNSB7IG1hcmdpbi10b3A6IDVyZW07IH1cbiAgICAmLTYgeyBtYXJnaW4tdG9wOiA2cmVtOyB9XG4gICAgJi03IHsgbWFyZ2luLXRvcDogN3JlbTsgfVxuICAgICYtOCB7IG1hcmdpbi10b3A6IDhyZW07IH1cbn1cblxuLm1hcmdpbi1ib3R0b20ge1xuICAgICYtMSB7IG1hcmdpbi1ib3R0b206IDFyZW07IH1cbiAgICAmLTIgeyBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG4gICAgJi0zIHsgbWFyZ2luLWJvdHRvbTogM3JlbTsgfVxuICAgICYtNCB7IG1hcmdpbi1ib3R0b206IDRyZW07IH1cbiAgICAmLTUgeyBtYXJnaW4tYm90dG9tOiA1cmVtOyB9XG4gICAgJi02IHsgbWFyZ2luLWJvdHRvbTogNnJlbTsgfVxuICAgICYtNyB7IG1hcmdpbi1ib3R0b206IDdyZW07IH1cbiAgICAmLTggeyBtYXJnaW4tYm90dG9tOiA4cmVtOyB9XG59XG5cbi5tYXJnaW4tbGVmdCB7XG4gICAgJi0xIHsgbWFyZ2luLWxlZnQ6IDFyZW07IH1cbiAgICAmLTIgeyBtYXJnaW4tbGVmdDogMnJlbTsgfVxuICAgICYtMyB7IG1hcmdpbi1sZWZ0OiAzcmVtOyB9XG4gICAgJi00IHsgbWFyZ2luLWxlZnQ6IDRyZW07IH1cbiAgICAmLTUgeyBtYXJnaW4tbGVmdDogNXJlbTsgfVxuICAgICYtNiB7IG1hcmdpbi1sZWZ0OiA2cmVtOyB9XG4gICAgJi03IHsgbWFyZ2luLWxlZnQ6IDdyZW07IH1cbiAgICAmLTggeyBtYXJnaW4tbGVmdDogOHJlbTsgfVxufVxuXG4ubWFyZ2luLXJpZ2h0IHtcbiAgICAmLTEgeyBtYXJnaW4tcmlnaHQ6IDFyZW07IH1cbiAgICAmLTIgeyBtYXJnaW4tcmlnaHQ6IDJyZW07IH1cbiAgICAmLTMgeyBtYXJnaW4tcmlnaHQ6IDNyZW07IH1cbiAgICAmLTQgeyBtYXJnaW4tcmlnaHQ6IDRyZW07IH1cbiAgICAmLTUgeyBtYXJnaW4tcmlnaHQ6IDVyZW07IH1cbiAgICAmLTYgeyBtYXJnaW4tcmlnaHQ6IDZyZW07IH1cbiAgICAmLTcgeyBtYXJnaW4tcmlnaHQ6IDdyZW07IH1cbiAgICAmLTggeyBtYXJnaW4tcmlnaHQ6IDhyZW07IH1cbn1cblxuLnBhZGRpbmcge1xuICAgICYtMSB7IHBhZGRpbmc6IDFyZW07IH1cbiAgICAmLTIgeyBwYWRkaW5nOiAycmVtOyB9XG4gICAgJi0zIHsgcGFkZGluZzogM3JlbTsgfVxuICAgICYtNCB7IHBhZGRpbmc6IDRyZW07IH1cbn1cblxuLm1hcmdpbiB7XG4gICAgJi0xIHsgbWFyZ2luOiAxcmVtOyB9XG4gICAgJi0yIHsgbWFyZ2luOiAycmVtOyB9XG4gICAgJi0zIHsgbWFyZ2luOiAzcmVtOyB9XG4gICAgJi00IHsgbWFyZ2luOiA0cmVtOyB9XG59XG4iLCIvKioqKioqKioqKioqKioqKioqKioqXG4gIE1lZGlhIFF1ZXJ5IENsYXNzZXNcbioqKioqKioqKioqKioqKioqKioqKiovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gIC5oaWRlLW9uLXNtYWxsLW9ubHksIC5oaWRlLW9uLXNtYWxsLWFuZC1kb3duIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xuICAuaGlkZS1vbi1tZWQtYW5kLWRvd24ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUyMXB4KSB7XG4gIC5oaWRlLW9uLW1lZC1hbmQtdXAge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUyMHB4KSBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLmhpZGUtb24tbWVkLW9ubHkge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5M3B4KSB7XG4gIC5oaWRlLW9uLWxhcmdlLW9ubHkge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDFweCkge1xuICAuaGlkZS1vbi1leHRyYS1sYXJnZS1vbmx5IHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAxcHgpIHtcbiAgLnNob3ctb24tZXh0cmEtbGFyZ2Uge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTNweCkge1xuICAuc2hvdy1vbi1sYXJnZSB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUyMHB4KSBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnNob3ctb24tbWVkaXVtIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgLnNob3ctb24tc21hbGwge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1MjFweCkge1xuICAuc2hvdy1vbi1tZWRpdW0tYW5kLXVwIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnNob3ctb24tbWVkaXVtLWFuZC1kb3duIHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgLmNlbnRlci1vbi1zbWFsbC1vbmx5IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cbiIsIkBtZWRpYSBwcmludCB7XG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7XG4gIH1cbiAgLmlyIGE6YWZ0ZXIsXG4gICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIsXG4gICBhW2hyZWZePVwiI1wiXTphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgfVxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIH1cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgQHBhZ2Uge1xuICAgIG1hcmdpbjogMC41Y207XG4gIH1cbiAgcCxcbiAgaDIsXG4gIGgzIHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMztcbiAgfVxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG59XG4iXX0= */
